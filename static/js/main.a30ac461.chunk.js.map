{"version":3,"sources":["shared/api/core/ApiError.ts","shared/api/core/request.ts","themes/light/palette.ts","shared/const/styles.const.ts","themes/light/shadows.ts","themes/light/index.ts","themes/light/shape.ts","routing/Routing.const.ts","core/context/Loader/LoaderContext.ts","core/context/Loader/LoaderContextProvider.tsx","core/context/Covid/CovidContext.ts","shared/api/services/Covid19WorldometersService.ts","core/context/Covid/CovidContextProvider.tsx","shared/i18n/funnelLabels.ts","shared/i18n/formatCountry.ts","shared/const/lang.const.ts","shared/i18n/messages.ts","shared/hooks/useMobile.ts","shared/utils/formatting.utils.ts","pages/Landing/Landing.utils.ts","pages/Landing/components/LandingGraphs/LandingGraphs.utils.ts","pages/Landing/components/LandingGraphs/components/Tooltip/Tooltip.tsx","core/components/Navigation/components/CountryDialog/CountryDialog.const.ts","core/components/Navigation/components/CountryDialog/CountryDialog.tsx","core/components/Navigation/components/CountrySelector/CountrySelector.tsx","pages/Landing/components/LandingGraphs/LandingGraphs.tsx","shared/utils/style.utils.ts","pages/Landing/components/LandingCounters/components/Counter/Counter.tsx","pages/Landing/components/LandingCounters/LandingCounters.tsx","pages/Landing/Landing.tsx","pages/Landing/Landing.const.ts","routing/Routing.tsx","core/components/Navigation/components/Header/Header.tsx","core/components/Navigation/Navigation.tsx","core/components/Main/Main.tsx","App.tsx","reportWebVitals.ts","index.tsx","shared/api/core/OpenAPI.ts"],"names":["ApiError","response","message","url","status","statusText","body","Error","isDefined","value","undefined","isString","isStringWithValue","isBlob","Blob","base64","str","btoa","err","Buffer","from","toString","getUrl","options","path","OpenAPI","ENCODE_PATH","BASE","query","params","qs","Object","keys","forEach","key","Array","isArray","push","encodeURIComponent","String","length","join","getQueryString","resolve","resolver","a","getHeaders","TOKEN","token","USERNAME","username","PASSWORD","password","HEADERS","additionalHeaders","defaultHeaders","entries","Accept","headers","filter","reduce","Headers","append","credentials","mediaType","type","getRequestBody","formData","FormData","getFormData","includes","JSON","stringify","sendRequest","method","request","WITH_CREDENTIALS","fetch","getResponseHeader","responseHeader","content","get","getResponseBody","contentType","toLowerCase","startsWith","json","text","console","error","catchErrors","result","errors","ok","responseBody","createGradient","color1","color2","Breakpoint","GREY","alpha","PRIMARY","light","main","dark","contrastText","INFO","SUCCESS","WARNING","ERROR","GRADIENTS","primary","info","success","warning","palette","common","black","white","secondary","grey","gradients","chart","violet","blue","green","yellow","red","divider","disabled","background","paper","default","neutral","action","active","hover","selected","disabledBackground","focus","hoverOpacity","disabledOpacity","LIGHT_MODE","shadows","color","transparent","createCustomShadow","transparent1","transparent2","transparent3","createShadow","lightTheme","createTheme","shape","borderRadius","borderRadiusSm","borderRadiusMd","ROUTES","LoaderContext","React","createContext","loaderState","setLoaderState","LoaderContextProvider","memo","children","useState","Provider","Box","sx","top","position","width","height","display","alignItems","justifyContent","zIndex","theme","appBar","CircularProgress","CovidContext","setChosenRegion","Covid19WorldometersService","yesterday","twoDaysAgo","allowNull","__request","sort","states","continent","strict","country","countries","CovidContextProvider","useContext","regions","setRegions","total","setTotal","chosenRegion","fetchAndPrepareData","useCallback","Promise","res","setTimeout","then","geoJson","getCovid19WorldometersService5","covidRegionsData","newCovidFeatures","features","feature","countryCovidInfo","find","el","countryInfo","iso3","properties","iso_a3","getCovid19WorldometersService","covidTotalData","log","useEffect","DEFAULT_SPACE","xs","sm","lg","FUNNEL_LABELS","population","cases","deaths","recovered","deathsPerOneMillion","casesPerOneMillion","recoveredPerOneMillion","registerLocale","countriesRu","formatCountry","countryCode","currentLang","getName","MESSAGES","ALL_WORLD","ALL_TIME","LOCATION","CHOOSE_LOCATION_FOR_INFO","SAVE","TODAY_CASES","TODAY_DEATHS","TODAY_RECOVERED","TOTAL","useMobile","useTheme","useMediaQuery","breakpoints","down","formatShortNumber","getValueFormatter","casesPercent","createStep","data","id","label","Tooltip","disable","Paper","elevation","p","mr","Typography","variant","component","ml","allWorldId","CountryDialog","props","setValue","useMemo","sortBy","map","iso_n3","handleChange","e","newValue","handleSave","rg","onClose","Dialog","DialogTitle","DialogContent","Autocomplete","mt","mb","fullWidth","onChange","onKeyPress","ev","preventDefault","renderInput","TextField","autoFocus","DialogActions","Button","onClick","endIcon","CountrySelector","open","setOpen","isMobile","handleOpenChange","prev","currentTitle","formattedCountry","fullScreen","LandingGraphs","s","colors","mg","spacing","parseInt","originData","Card","CardContent","textTransform","px","pt","pb","i","margin","right","bottom","left","valueFormat","motionConfig","enableArcLabels","arcLinkLabel","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","enableArcLinkLabels","tooltip","datum","Counter","Icon","icon","fontSize","typography","LandingCounters","todayCases","todayRecovered","todayDeaths","Grid","container","item","LocalHospitalIcon","CoronavirusIcon","ClearIcon","Landing","configured","setConfigured","hoverPolygon","setHoverPolygon","globeRef","useRef","globeOuterRef","maxVal","Math","max","colorScale","scaleLinear","domain","range","handlePolygonClick","lat","lng","long","current","controls","autoRotate","pointOfView","enableZoom","altitude","ref","showGlobe","showAtmosphere","clientWidth","window","innerWidth","innerHeight","backgroundColor","onGlobeReady","polygonSideColor","polygonCapColor","f","polygonsData","polygonStrokeColor","polygonLabel","toFixed","onPolygonClick","onPolygonHover","Routing","exact","appBarSx","Navigation","AppBar","Toolbar","noWrap","boxSx","Main","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","VERSION"],"mappings":"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","file":"static/js/main.a30ac461.chunk.js","sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n\n    constructor(response: ApiResult, message: string) {\n        super(message);\n\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n    }\n}","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { OpenAPI } from './OpenAPI';\n\nfunction isDefined<T>(value: T | null | undefined): value is Exclude<T, null | undefined> {\n    return value !== undefined && value !== null;\n}\n\nfunction isString(value: any): value is string {\n    return typeof value === 'string';\n}\n\nfunction isStringWithValue(value: any): value is string {\n    return isString(value) && value !== '';\n}\n\nfunction isBlob(value: any): value is Blob {\n    return value instanceof Blob;\n}\n\nfunction base64(str: string): string {\n    try {\n        return btoa(str);\n    } catch (err) {\n        return Buffer.from(str).toString('base64');\n    }\n}\n\nfunction getQueryString(params: Record<string, any>): string {\n    const qs: string[] = [];\n    Object.keys(params).forEach(key => {\n        const value = params[key];\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(value => {\n                    qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n                });\n            } else {\n                qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n            }\n        }\n    });\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n    return '';\n}\n\nfunction getUrl(options: ApiRequestOptions): string {\n    const path = OpenAPI.ENCODE_PATH ? OpenAPI.ENCODE_PATH(options.path) : options.path;\n    const url = `${OpenAPI.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n}\n\nfunction getFormData(params: Record<string, any>): FormData {\n    const formData = new FormData();\n    Object.keys(params).forEach(key => {\n        const value = params[key];\n        if (isDefined(value)) {\n            formData.append(key, value);\n        }\n    });\n    return formData;\n}\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nasync function resolve<T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n}\n\nasync function getHeaders(options: ApiRequestOptions): Promise<Headers> {\n    const token = await resolve(options, OpenAPI.TOKEN);\n    const username = await resolve(options, OpenAPI.USERNAME);\n    const password = await resolve(options, OpenAPI.PASSWORD);\n    const additionalHeaders = await resolve(options, OpenAPI.HEADERS);\n\n    const defaultHeaders = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([key, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: value,\n        }), {});\n\n    const headers = new Headers(defaultHeaders);\n\n    if (isStringWithValue(token)) {\n        headers.append('Authorization', `Bearer ${token}`);\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers.append('Authorization', `Basic ${credentials}`);\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers.append('Content-Type', options.mediaType);\n        } else if (isBlob(options.body)) {\n            headers.append('Content-Type', options.body.type || 'application/octet-stream');\n        } else if (isString(options.body)) {\n            headers.append('Content-Type', 'text/plain');\n        } else {\n            headers.append('Content-Type', 'application/json');\n        }\n    }\n    return headers;\n}\n\nfunction getRequestBody(options: ApiRequestOptions): BodyInit | undefined {\n    if (options.formData) {\n        return getFormData(options.formData);\n    }\n    if (options.body) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n}\n\nasync function sendRequest(options: ApiRequestOptions, url: string): Promise<Response> {\n    const request: RequestInit = {\n        method: options.method,\n        headers: await getHeaders(options),\n        body: getRequestBody(options),\n    };\n    if (OpenAPI.WITH_CREDENTIALS) {\n        request.credentials = 'include';\n    }\n    return await fetch(url, request);\n}\n\nfunction getResponseHeader(response: Response, responseHeader?: string): string | null {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return null;\n}\n\nasync function getResponseBody(response: Response): Promise<any> {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const isJSON = contentType.toLowerCase().startsWith('application/json');\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return null;\n}\n\nfunction catchErrors(options: ApiRequestOptions, result: ApiResult): void {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(result, error);\n    }\n\n    if (!result.ok) {\n        throw new ApiError(result, 'Generic Error');\n    }\n}\n\n/**\n * Request using fetch client\n * @param options The request options from the the service\n * @returns ApiResult\n * @throws ApiError\n */\nexport async function request(options: ApiRequestOptions): Promise<ApiResult> {\n    const url = getUrl(options);\n    const response = await sendRequest(options, url);\n    const responseBody = await getResponseBody(response);\n    const responseHeader = getResponseHeader(response, options.responseHeader);\n\n    const result: ApiResult = {\n        url,\n        ok: response.ok,\n        status: response.status,\n        statusText: response.statusText,\n        body: responseHeader || responseBody,\n    };\n\n    catchErrors(options, result);\n    return result;\n}\n","import { alpha } from '@mui/material/styles'\n\nfunction createGradient(color1: string, color2: string) {\n  return `linear-gradient(to bottom, ${color1}, ${color2})`\n}\n\nconst GREY = {\n  0: '#FFFFFF',\n  100: '#F9FAFB',\n  200: '#F4F6F8',\n  300: '#DFE3E8',\n  400: '#C4CDD5',\n  500: '#919EAB',\n  600: '#637381',\n  700: '#454F5B',\n  800: '#212B36',\n  900: '#161C24',\n  500_8: alpha('#919EAB', 0.08),\n  500_12: alpha('#919EAB', 0.12),\n  500_16: alpha('#919EAB', 0.16),\n  500_24: alpha('#919EAB', 0.24),\n  500_32: alpha('#919EAB', 0.32),\n  500_48: alpha('#919EAB', 0.48),\n  500_56: alpha('#919EAB', 0.56),\n  500_80: alpha('#919EAB', 0.8),\n}\n\nconst PRIMARY = {\n  light: '#FF8F8F',\n  main: '#FC1212',\n  dark: '#B50000',\n  contrastText: '#fff',\n}\nconst SECONDARY = {\n  light: '#D6E4FF',\n  main: '#3366FF',\n  dark: '#091A7A',\n  contrastText: '#fff',\n}\nconst INFO = {\n  light: '#D0F2FF',\n  main: '#1890FF',\n  dark: '#04297A',\n  contrastText: '#fff',\n}\nconst SUCCESS = {\n  light: '#E9FCD4',\n  main: '#54D62C',\n  dark: '#08660D',\n  contrastText: GREY[800],\n}\nconst WARNING = {\n  light: '#FFF7CD',\n  main: '#FFC107',\n  dark: '#7A4F01',\n  contrastText: GREY[800],\n}\nconst ERROR = {\n  light: '#FFE7D9',\n  main: '#FF4842',\n  dark: '#7A0C2E',\n  contrastText: '#fff',\n}\n\nconst GRADIENTS = {\n  primary: createGradient(PRIMARY.light, PRIMARY.main),\n  info: createGradient(INFO.light, INFO.main),\n  success: createGradient(SUCCESS.light, SUCCESS.main),\n  warning: createGradient(WARNING.light, WARNING.main),\n  error: createGradient(ERROR.light, ERROR.main),\n}\n\nconst CHART_COLORS = {\n  violet: ['#826AF9', '#9E86FF', '#D0AEFF', '#F7D2FF'],\n  blue: ['#2D99FF', '#83CFFF', '#A5F3FF', '#CCFAFF'],\n  green: ['#2CD9C5', '#60F1C8', '#A4F7CC', '#C0F2DC'],\n  yellow: ['#FFE700', '#FFEF5A', '#FFF7AE', '#FFF3D6'],\n  red: ['#FF6C40', '#FF8F6D', '#FFBD98', '#FFF2D4'],\n}\n\nexport const palette = {\n  common: { black: '#000', white: '#fff' },\n  primary: { ...PRIMARY },\n  secondary: { ...SECONDARY },\n  info: { ...INFO },\n  success: { ...SUCCESS },\n  warning: { ...WARNING },\n  error: { ...ERROR },\n  grey: GREY,\n  gradients: GRADIENTS,\n  chart: CHART_COLORS,\n  divider: GREY[500_24],\n  text: { primary: GREY[800], secondary: GREY[600], disabled: GREY[500] },\n  background: { paper: '#fff', default: '#fff', neutral: GREY[200] },\n  action: {\n    active: GREY[600],\n    hover: GREY[500_8],\n    selected: GREY[500_16],\n    disabled: GREY[500_80],\n    disabledBackground: GREY[500_24],\n    focus: GREY[500_24],\n    hoverOpacity: 0.08,\n    disabledOpacity: 0.48,\n  },\n}\n","export enum Breakpoint {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport const DRAWER_WIDTH = 240\nexport const DEFAULT_SPACE = { xs: 2, sm: 4, lg: 8 }\n","import { alpha } from '@mui/material/styles';\nimport { Shadows } from '@mui/material/styles/shadows'\nimport { palette } from './palette';\n\nconst LIGHT_MODE = palette.grey[500];\n\nconst createShadow = (color: string) => {\n  const transparent1 = alpha(color, 0.2);\n  const transparent2 = alpha(color, 0.14);\n  const transparent3 = alpha(color, 0.12);\n  return [\n    'none',\n    `0px 2px 1px -1px ${transparent1},0px 1px 1px 0px ${transparent2},0px 1px 3px 0px ${transparent3}`,\n    `0px 3px 1px -2px ${transparent1},0px 2px 2px 0px ${transparent2},0px 1px 5px 0px ${transparent3}`,\n    `0px 3px 3px -2px ${transparent1},0px 3px 4px 0px ${transparent2},0px 1px 8px 0px ${transparent3}`,\n    `0px 2px 4px -1px ${transparent1},0px 4px 5px 0px ${transparent2},0px 1px 10px 0px ${transparent3}`,\n    `0px 3px 5px -1px ${transparent1},0px 5px 8px 0px ${transparent2},0px 1px 14px 0px ${transparent3}`,\n    `0px 3px 5px -1px ${transparent1},0px 6px 10px 0px ${transparent2},0px 1px 18px 0px ${transparent3}`,\n    `0px 4px 5px -2px ${transparent1},0px 7px 10px 1px ${transparent2},0px 2px 16px 1px ${transparent3}`,\n    `0px 5px 5px -3px ${transparent1},0px 8px 10px 1px ${transparent2},0px 3px 14px 2px ${transparent3}`,\n    `0px 5px 6px -3px ${transparent1},0px 9px 12px 1px ${transparent2},0px 3px 16px 2px ${transparent3}`,\n    `0px 6px 6px -3px ${transparent1},0px 10px 14px 1px ${transparent2},0px 4px 18px 3px ${transparent3}`,\n    `0px 6px 7px -4px ${transparent1},0px 11px 15px 1px ${transparent2},0px 4px 20px 3px ${transparent3}`,\n    `0px 7px 8px -4px ${transparent1},0px 12px 17px 2px ${transparent2},0px 5px 22px 4px ${transparent3}`,\n    `0px 7px 8px -4px ${transparent1},0px 13px 19px 2px ${transparent2},0px 5px 24px 4px ${transparent3}`,\n    `0px 7px 9px -4px ${transparent1},0px 14px 21px 2px ${transparent2},0px 5px 26px 4px ${transparent3}`,\n    `0px 8px 9px -5px ${transparent1},0px 15px 22px 2px ${transparent2},0px 6px 28px 5px ${transparent3}`,\n    `0px 8px 10px -5px ${transparent1},0px 16px 24px 2px ${transparent2},0px 6px 30px 5px ${transparent3}`,\n    `0px 8px 11px -5px ${transparent1},0px 17px 26px 2px ${transparent2},0px 6px 32px 5px ${transparent3}`,\n    `0px 9px 11px -5px ${transparent1},0px 18px 28px 2px ${transparent2},0px 7px 34px 6px ${transparent3}`,\n    `0px 9px 12px -6px ${transparent1},0px 19px 29px 2px ${transparent2},0px 7px 36px 6px ${transparent3}`,\n    `0px 10px 13px -6px ${transparent1},0px 20px 31px 3px ${transparent2},0px 8px 38px 7px ${transparent3}`,\n    `0px 10px 13px -6px ${transparent1},0px 21px 33px 3px ${transparent2},0px 8px 40px 7px ${transparent3}`,\n    `0px 10px 14px -6px ${transparent1},0px 22px 35px 3px ${transparent2},0px 8px 42px 7px ${transparent3}`,\n    `0px 11px 14px -7px ${transparent1},0px 23px 36px 3px ${transparent2},0px 9px 44px 8px ${transparent3}`,\n    `0px 11px 15px -7px ${transparent1},0px 24px 38px 3px ${transparent2},0px 9px 46px 8px ${transparent3}`\n  ] as Shadows;\n};\n\nconst createCustomShadow = (color: string) => {\n  const transparent = alpha(color, 0.24);\n\n  return {\n    z1: `0 1px 2px 0 ${transparent}`,\n    z8: `0 8px 16px 0 ${transparent}`,\n    z12: `0 0 2px 0 ${transparent}, 0 12px 24px 0 ${transparent}`,\n    z16: `0 0 2px 0 ${transparent}, 0 16px 32px -4px ${transparent}`,\n    z20: `0 0 2px 0 ${transparent}, 0 20px 40px -4px ${transparent}`,\n    z24: `0 0 4px 0 ${transparent}, 0 24px 48px 0 ${transparent}`,\n    primary: `0 8px 16px 0 ${alpha(palette.primary.main, 0.24)}`,\n    secondary: `0 8px 16px 0 ${alpha(palette.secondary.main, 0.24)}`,\n    info: `0 8px 16px 0 ${alpha(palette.info.main, 0.24)}`,\n    success: `0 8px 16px 0 ${alpha(palette.success.main, 0.24)}`,\n    warning: `0 8px 16px 0 ${alpha(palette.warning.main, 0.24)}`,\n    error: `0 8px 16px 0 ${alpha(palette.error.main, 0.24)}`\n  };\n};\n\nexport const customShadows = createCustomShadow(LIGHT_MODE);\n\nexport const shadows = createShadow(LIGHT_MODE);\n","import createTheme from '@mui/material/styles/createTheme'\nimport { palette } from './palette'\nimport { shadows } from './shadows'\nimport { shape } from './shape'\n\n// TODO затайпить тему\nexport const lightTheme = createTheme({\n  palette,\n  shape,\n  shadows,\n})\n","export const shape = {\n  borderRadius: 8,\n  borderRadiusSm: 12,\n  borderRadiusMd: 16\n};\n","const MAIN = '/'\n\nexport const ROUTES = {\n  MAIN,\n}\n","import React from 'react'\n\nimport { LoaderContextProps } from './LoaderContext.types'\n\nexport const LoaderContext = React.createContext<LoaderContextProps>({\n    loaderState: false,\n    setLoaderState: () => {\n        throw new Error()\n    },\n})\n","import { FC, memo, useState } from 'react'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport Box from '@mui/material/Box'\n\nimport { LoaderContext } from './LoaderContext'\n\nexport const LoaderContextProvider: FC = memo(({ children }) => {\n  const [loaderState, setLoaderState] = useState<boolean>(false)\n\n  return (\n    <LoaderContext.Provider value={{ loaderState, setLoaderState }}>\n      {loaderState && (\n        <Box\n          sx={{\n            top: 0,\n            position: 'fixed',\n            width: '100vw',\n            height: '100vh',\n            background: 'white',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: (theme => theme.zIndex.appBar - 1)\n          }}\n        >\n          <CircularProgress />\n        </Box>\n      )}\n      {children}\n    </LoaderContext.Provider>\n  )\n})\n","import React from 'react'\n\nimport { CovidContextProps } from './CovidContext.types'\n\nexport const CovidContext = React.createContext<CovidContextProps>({\n  setChosenRegion: () => {\n    throw new Error()\n  },\n})\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { covidAll } from '../models/covidAll';\nimport type { covidContinent } from '../models/covidContinent';\nimport type { covidContinents } from '../models/covidContinents';\nimport type { covidCountries } from '../models/covidCountries';\nimport type { covidCountry } from '../models/covidCountry';\nimport type { covidState } from '../models/covidState';\nimport type { covidStates } from '../models/covidStates';\nimport { request as __request } from '../core/request';\n\nexport class Covid19WorldometersService {\n\n    /**\n     * Get global COVID-19 totals for today, yesterday and two days ago\n     * @returns covidAll Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService({\n        yesterday,\n        twoDaysAgo,\n        allowNull,\n    }: {\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** Queries data reported two days ago **/\n        twoDaysAgo?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidAll> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/all`,\n            query: {\n                'yesterday': yesterday,\n                'twoDaysAgo': twoDaysAgo,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n    /**\n     * Get COVID-19 totals for all US States\n     * @returns covidStates Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService1({\n        sort,\n        yesterday,\n        allowNull,\n    }: {\n        /** Provided a key (e.g. cases, todayCases, deaths, active), result will be sorted from greatest to least **/\n        sort?: any,\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidStates> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/states`,\n            query: {\n                'sort': sort,\n                'yesterday': yesterday,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n    /**\n     * Get COVID-19 totals for specific US State(s)\n     * @returns covidState Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService2({\n        states,\n        yesterday,\n        allowNull,\n    }: {\n        /** State name or comma separated names spelled correctly **/\n        states: any,\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidState> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/states/${states}`,\n            query: {\n                'yesterday': yesterday,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n    /**\n     * Get COVID-19 totals for all continents\n     * @returns covidContinents Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService3({\n        yesterday,\n        twoDaysAgo,\n        sort,\n        allowNull,\n    }: {\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** Queries data reported two days ago **/\n        twoDaysAgo?: any,\n        /** Provided a key (e.g. cases, todayCases, deaths, recovered, active), results will be sorted from greatest to least **/\n        sort?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidContinents> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/continents`,\n            query: {\n                'yesterday': yesterday,\n                'twoDaysAgo': twoDaysAgo,\n                'sort': sort,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n    /**\n     * Get COVID-19 totals for a specific continent\n     * @returns covidContinent Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService4({\n        continent,\n        yesterday,\n        twoDaysAgo,\n        strict,\n        allowNull,\n    }: {\n        /** Continent name **/\n        continent: any,\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** Queries data reported two days ago **/\n        twoDaysAgo?: any,\n        /** Setting to false gives you the ability to fuzzy search continents (i.e. Oman vs. rOMANia) **/\n        strict?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidContinent> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/continents/${continent}`,\n            query: {\n                'yesterday': yesterday,\n                'twoDaysAgo': twoDaysAgo,\n                'strict': strict,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n    /**\n     * Get COVID-19 totals for all countries\n     * @returns covidCountries Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService5({\n        yesterday,\n        twoDaysAgo,\n        sort,\n        allowNull,\n    }: {\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** Queries data reported two days ago **/\n        twoDaysAgo?: any,\n        /** Provided a key (e.g. cases, todayCases, deaths, recovered, active), the result will be sorted from greatest to least **/\n        sort?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidCountries> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/countries`,\n            query: {\n                'yesterday': yesterday,\n                'twoDaysAgo': twoDaysAgo,\n                'sort': sort,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n    /**\n     * Get COVID-19 totals for a specific country\n     * @returns covidCountry Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService6({\n        country,\n        yesterday,\n        twoDaysAgo,\n        strict,\n        allowNull,\n    }: {\n        /** A country name, iso2, iso3, or country ID code **/\n        country: any,\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** Queries data reported two days ago **/\n        twoDaysAgo?: any,\n        /** Setting to false gives you the ability to fuzzy search countries (i.e. Oman vs. rOMANia) **/\n        strict?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidCountry> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/countries/${country}`,\n            query: {\n                'yesterday': yesterday,\n                'twoDaysAgo': twoDaysAgo,\n                'strict': strict,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n    /**\n     * Get COVID-19 totals for a specific set of countries\n     * @returns covidCountries Status OK\n     * @throws ApiError\n     */\n    public static async getCovid19WorldometersService7({\n        countries,\n        yesterday,\n        twoDaysAgo,\n        allowNull,\n    }: {\n        /** Multiple country names, iso2, iso3, or country IDs separated by commas **/\n        countries: any,\n        /** Queries data reported a day ago **/\n        yesterday?: any,\n        /** Queries data reported two days ago **/\n        twoDaysAgo?: any,\n        /** By default, if a value is missing, it is returned as 0. This allows nulls to be returned **/\n        allowNull?: any,\n    }): Promise<covidCountries> {\n        const result = await __request({\n            method: 'GET',\n            path: `/v3/covid-19/countries/${countries}`,\n            query: {\n                'yesterday': yesterday,\n                'twoDaysAgo': twoDaysAgo,\n                'allowNull': allowNull,\n            },\n        });\n        return result.body;\n    }\n\n}","import { useState, FC, memo, useCallback, useContext, useEffect } from 'react'\n\nimport { Covid19WorldometersService, covidAll } from 'shared/api'\nimport { FeatureCollection, Geometry } from 'geojson'\nimport { LoaderContext } from 'core/context/Loader'\nimport { CovidContext } from './CovidContext'\nimport { CovidFeature, CovidFeatures, GeoCountry } from './CovidContext.types'\n\nexport const CovidContextProvider: FC = memo(({ children }) => {\n  const { setLoaderState } = useContext(LoaderContext)\n  const [regions, setRegions] = useState<CovidFeatures>()\n  const [total, setTotal] = useState<covidAll>()\n  const [chosenRegion, setChosenRegion] = useState<CovidFeature>()\n\n  const fetchAndPrepareData = useCallback(async () => {\n    setLoaderState(true)\n    try {\n      // Чтобы лоадер завис минимум на секунду, для отображения поведения\n      // TODO убрать после показа\n      await new Promise((res) => setTimeout(res, 1000))\n\n      const geoJson: FeatureCollection<Geometry, GeoCountry> = await fetch(\n        '/countries.geo.json'\n      ).then((res) => res.json())\n      const covidRegionsData =\n        await Covid19WorldometersService.getCovid19WorldometersService5({})\n\n      const newCovidFeatures: CovidFeatures =\n        geoJson.features.reduce<CovidFeatures>((features, feature) => {\n          const countryCovidInfo = covidRegionsData.find(\n            (el) => el.countryInfo.iso3 === feature.properties?.iso_a3\n          )\n\n          if (!countryCovidInfo) return features\n\n          return [\n            ...features,\n            {\n              ...feature,\n              properties: { ...feature.properties, ...countryCovidInfo },\n            },\n          ]\n        }, [])\n      await setRegions(newCovidFeatures)\n\n      const covidTotalData =\n        await Covid19WorldometersService.getCovid19WorldometersService({})\n      setTotal(covidTotalData)\n    } finally {\n      console.log('covid data ready')\n    }\n  }, [setLoaderState])\n\n  useEffect(() => {\n    fetchAndPrepareData()\n  }, [])\n\n  return (\n    <CovidContext.Provider\n      value={{\n        total,\n        regions,\n        setChosenRegion,\n        chosenRegion,\n      }}\n    >\n      {children}\n    </CovidContext.Provider>\n  )\n})\n","export const FUNNEL_LABELS: {[key: string]: string} = {\n  population: 'Население',\n  cases: 'Случаи заражения',\n  deaths: 'Смерти',\n  recovered: 'Выздоровевшие',\n  deathsPerOneMillion: 'Смерти',\n  casesPerOneMillion: 'Случаи заражения',\n  recoveredPerOneMillion: 'Случаи выздоровления'\n}\n","import countries from 'i18n-iso-countries'\nimport countriesRu from 'i18n-iso-countries/langs/ru.json'\nimport { langRu } from 'shared/const'\n\ncountries.registerLocale(countriesRu)\n\nexport const formatCountry = (\n  countryCode?: string | number,\n  currentLang = langRu\n) => countryCode && countries.getName(countryCode, currentLang)\n","export const langRu = 'ru';\n","const ALL_WORLD = 'Весь мир'\nconst ALL_TIME = 'за всё время'\nconst LOCATION = 'Локация'\nconst CHOOSE_LOCATION_FOR_INFO = 'Выбрать локацию для отображения информации'\nconst SAVE = 'Сохранить'\nconst TODAY_RECOVERED = 'Выздоровевших сегодня'\nconst TODAY_CASES = 'Заражений сегодня'\nconst TODAY_DEATHS = 'Смертей сегодня'\nconst TOTAL = 'Всего'\n\nexport const MESSAGES = {\n  ALL_WORLD,\n  ALL_TIME,\n  LOCATION,\n  CHOOSE_LOCATION_FOR_INFO,\n  SAVE,\n  TODAY_CASES,\n  TODAY_DEATHS,\n  TODAY_RECOVERED,\n  TOTAL,\n}\n","import useTheme from '@mui/material/styles/useTheme'\nimport useMediaQuery from '@mui/material/useMediaQuery'\n\nexport const useMobile = () => {\n  const theme = useTheme()\n  return useMediaQuery(theme.breakpoints.down('sm'))\n}\n","import { getValueFormatter } from '@nivo/core'\n\nexport const formatShortNumber = (value: any) => getValueFormatter('>-.4s')(value)\n","// Аксессоры\nexport const lat = (feature: any) => feature?.properties?.countryInfo?.lat\nexport const lng = (feature: any) => feature?.properties?.countryInfo?.lng\nexport const population = (feature: any) => feature?.properties?.population\nexport const cases = (feature: any) => feature?.properties?.cases\nexport const casesPercent = (feature: any) => (cases(feature) / population(feature)) * 100\n","import { covidAll } from 'shared/api'\nimport { FUNNEL_LABELS } from 'shared/i18n'\n\n\nexport const createStep = (data: Partial<covidAll>, key: keyof covidAll) => ({\n  id: key,\n  value: data[key],\n  label: FUNNEL_LABELS?.[key] || '',\n})\n","import Paper from '@mui/material/Paper'\nimport InfoIcon from '@mui/icons-material/Info'\nimport Typography from '@mui/material/Typography'\nimport { formatShortNumber } from 'shared/utils'\nimport { TooltipProps } from './Tooltip.types'\n\nexport const Tooltip = ({ value, label, disable }: TooltipProps) => !disable ? (\n  <Paper elevation={6} sx={{ p: 2, display: 'inline-flex', alignItems: 'center', zIndex: 99 }}>\n    <InfoIcon sx={{ mr: 1 }} />\n    <Typography variant=\"body1\" component=\"span\">\n      {`${label}:`}\n    </Typography>\n    <Typography variant=\"body1\" component=\"span\" sx={{ ml: 0.5 }}>\n      <b>{formatShortNumber(value)}</b>\n    </Typography>\n  </Paper>\n) : null\n","export const allWorldId = 'allWorld'\n","// import Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\n// import DialogContentText from '@mui/material/DialogContentText';\nimport Dialog, { DialogProps } from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\nimport SaveIcon from '@mui/icons-material/Save'\nimport { formatCountry, MESSAGES } from 'shared/i18n'\nimport sortBy from 'lodash.sortby'\nimport { useCallback, useContext, useMemo, useState } from 'react'\nimport { CovidContext } from 'core/context'\nimport Button from '@mui/material/Button'\nimport { allWorldId } from 'core/components/Navigation/components/CountryDialog/CountryDialog.const'\nimport { Value } from 'core/components/Navigation/components/CountryDialog/CountryDialog.types'\n\nexport const CountryDialog = (props: DialogProps) => {\n  const { regions, setChosenRegion } = useContext(CovidContext)\n  const [value, setValue] = useState<Value>(null)\n\n  const options = useMemo(\n    () => [\n      { id: allWorldId, label: MESSAGES.ALL_WORLD },\n      ...sortBy(\n        regions?.map(({ properties }) => ({\n          id: properties.iso_n3,\n          label: formatCountry(properties.iso_n3),\n        })) || [],\n        (el) => el.label\n      ),\n    ],\n    [regions]\n  )\n\n  const handleChange = useCallback((e: any, newValue: Value) => {\n    setValue(newValue)\n  }, [])\n\n  const handleSave = useCallback(() => {\n    if (!value || value.id === allWorldId) {\n      setChosenRegion(undefined)\n    } else {\n      setChosenRegion(regions?.find((rg) => rg.properties.iso_n3 === value.id))\n    }\n\n    props.onClose?.({}, 'escapeKeyDown')\n  }, [value, setChosenRegion, regions])\n\n  return (\n    <Dialog {...props}>\n      <DialogTitle>{MESSAGES.CHOOSE_LOCATION_FOR_INFO}</DialogTitle>\n      <DialogContent>\n        <Autocomplete\n          id=\"countrySelect\"\n          options={options}\n          sx={{ mt: 1, mb: 1 }}\n          fullWidth\n          onChange={handleChange}\n          value={value}\n          onKeyPress={(ev) => {\n            if (ev.key === 'Enter') {\n              handleSave()\n              ev.preventDefault()\n            }\n          }}\n          renderInput={(params) => (\n            <TextField {...params} label={MESSAGES.LOCATION} autoFocus />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSave} endIcon={<SaveIcon />}>\n          {MESSAGES.SAVE}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { useCallback, useContext, useMemo, useState } from 'react'\nimport { CovidContext } from 'core/context'\nimport { formatCountry, MESSAGES } from 'shared/i18n'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport { useMobile } from 'shared/hooks'\nimport { CountryDialog } from 'core/components/Navigation/components/CountryDialog'\n\nexport const CountrySelector = () => {\n  const [open, setOpen] = useState(false)\n  const { chosenRegion } = useContext(CovidContext)\n  const isMobile = useMobile()\n\n  const handleOpenChange = useCallback(() => {\n    setOpen((prev) => !prev)\n  }, [])\n\n  const currentTitle = useMemo(\n    () => {\n      const formattedCountry = formatCountry(chosenRegion?.properties.iso_n3)\n      if (!formattedCountry) return MESSAGES.ALL_WORLD\n      // Мне за это стыдно, но времени нет\n      if (formattedCountry === 'КНР (Китайская Народная Республика)') return 'КНР'\n      return formatCountry(chosenRegion?.properties.iso_n3)\n    },\n    [chosenRegion]\n  )\n\n  return (\n    <>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Button variant=\"outlined\" onClick={handleOpenChange}>{currentTitle}</Button>\n      </Box>\n      <CountryDialog fullScreen={isMobile} open={open} onClose={handleOpenChange}/>\n    </>\n  )\n}\n","import Paper from '@mui/material/Paper'\nimport Card from '@mui/material/Card'\nimport CardContent from '@mui/material/CardContent'\nimport useTheme from '@mui/material/styles/useTheme'\nimport { formatShortNumber, parsePx } from 'shared/utils'\nimport { useContext, useMemo } from 'react'\nimport { CovidContext } from 'core/context'\nimport InfoIcon from '@mui/icons-material/Info'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport { ResponsivePie } from '@nivo/pie'\nimport { useMobile } from 'shared/hooks'\nimport { MESSAGES } from 'shared/i18n'\nimport { createStep } from './LandingGraphs.utils'\nimport { Tooltip } from './components'\n\nexport const LandingGraphs = () => {\n  const { chosenRegion, total } = useContext(CovidContext)\n  const theme = useTheme()\n  const colors = [\n    theme.palette.warning.main,\n    theme.palette.error.main,\n    theme.palette.success.main,\n  ]\n  const mg = parsePx(theme.spacing(4))\n  const isMobile = useMobile()\n\n  const data = useMemo(() => {\n    const originData = chosenRegion?.properties || total\n    return originData\n      ? [\n          createStep(originData, 'cases'),\n          createStep(originData, 'deaths'),\n          createStep(originData, 'recovered'),\n        ]\n      : undefined\n  }, [chosenRegion, total])\n\n  return (\n    <Paper elevation={6}>\n      <Card>\n        <CardContent>\n          <Typography\n            variant=\"caption\"\n            sx={{ textTransform: 'lowercase', display: 'block' }}\n          >\n            {MESSAGES.TOTAL}\n          </Typography>\n          {isMobile && (\n            <Box sx={{ px: 1, pt: 2, pb: 2 }}>\n              {data?.map((el, i) => (\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                  <InfoIcon sx={{ color: colors[i], mr: 0.5 }} />\n                  <Typography>{el.label}: <b>{formatShortNumber(el.value)}</b></Typography>\n                </Box>\n              ))}\n            </Box>\n          )}\n        </CardContent>\n        <CardContent sx={{ height: '400px' }} id=\"pie\">\n          {data && (\n            <ResponsivePie\n              data={data}\n              margin={{ top: mg, right: mg, bottom: mg, left: mg }}\n              valueFormat=\">-.4s\"\n              colors={colors}\n              motionConfig=\"wobbly\"\n              enableArcLabels={isMobile}\n              arcLinkLabel=\"label\"\n              innerRadius={0.5}\n              padAngle={1}\n              cornerRadius={4}\n              activeOuterRadiusOffset={8}\n              enableArcLinkLabels={!isMobile}\n              tooltip={(p) => (\n                <Tooltip value={p.datum.value} label={p.datum.label} disable={isMobile} />\n              )}\n            />\n          )}\n        </CardContent>\n      </Card>\n    </Paper>\n  )\n}\n","export const parsePx = (s: string) => parseInt(s, 10)\n","import Paper from '@mui/material/Paper'\nimport Card from '@mui/material/Card'\n// import CardHeader from '@mui/material/CardHeader'\nimport CardContent from '@mui/material/CardContent'\nimport { formatShortNumber } from 'shared/utils'\nimport Typography from '@mui/material/Typography'\n// import Divider from '@mui/material/Divider'\nimport Box from '@mui/material/Box'\nimport { CounterProps } from './Counter.types'\n\nexport const Counter = ({ label, value, icon: Icon, color }: CounterProps) => (\n  <Paper elevation={6}>\n    <Card>\n      <CardContent>\n        <Typography\n          variant=\"caption\"\n          sx={{ textTransform: 'lowercase', display: 'block' }}\n        >\n          {label}\n        </Typography>\n        <Box\n          sx={{\n            fontSize: (theme) => theme.typography.fontSize * 2,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          {value ? (\n            <>\n              <Icon sx={{ color, mr: 1 }} fontSize=\"inherit\" />\n              <Typography variant=\"body1\" fontSize=\"inherit\" sx={{ color }}>\n                {formatShortNumber(value)}\n              </Typography>\n            </>\n          ) : (\n            <Typography variant=\"body1\" sx={{ mt: 1 }}>данных нет</Typography>\n          )}\n        </Box>\n      </CardContent>\n    </Card>\n  </Paper>\n)\n","import Grid from '@mui/material/Grid'\nimport { useContext } from 'react'\nimport { CovidContext } from 'core/context'\nimport { MESSAGES } from 'shared/i18n'\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital'\nimport CoronavirusIcon from '@mui/icons-material/Coronavirus'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport useTheme from '@mui/material/styles/useTheme'\nimport { Counter } from './components'\n\nexport const LandingCounters = () => {\n  const theme = useTheme()\n  const { total, chosenRegion } = useContext(CovidContext)\n  const { todayCases, todayRecovered, todayDeaths } =\n    chosenRegion?.properties || total || {}\n\n  return (\n    <Grid container spacing={2} alignItems=\"stretch\">\n      <Grid item xs={12} sm={4}>\n        <Counter\n          color={theme.palette.success.main}\n          icon={LocalHospitalIcon}\n          label={MESSAGES.TODAY_RECOVERED}\n          value={todayRecovered}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Counter\n          color={theme.palette.warning.main}\n          icon={CoronavirusIcon}\n          label={MESSAGES.TODAY_CASES}\n          value={todayCases}\n        />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Counter\n          color={theme.palette.error.main}\n          icon={ClearIcon}\n          label={MESSAGES.TODAY_DEATHS}\n          value={todayDeaths}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n","import Globe, { GlobeMethods } from 'react-globe.gl'\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport useTheme from '@mui/material/styles/useTheme'\nimport { CovidContext, CovidFeature, LoaderContext } from 'core/context'\nimport Grid from '@mui/material/Grid'\nimport { Store } from 'App.types'\nimport { scaleLinear } from 'd3-scale'\nimport { DEFAULT_SPACE } from 'shared/const'\nimport { formatCountry } from 'shared/i18n'\nimport { useMobile } from 'shared/hooks'\nimport { formatShortNumber } from 'shared/utils'\nimport Box from '@mui/material/Box'\nimport { casesPercent } from './Landing.utils'\nimport { POV_CHANGE_DUR } from './Landing.const'\nimport { LandingGraphs, LandingCounters } from './components'\n\nexport const Landing = () => {\n  const { regions, setChosenRegion, chosenRegion } = useContext(CovidContext)\n  const { setLoaderState } = useContext(LoaderContext)\n  const [configured, setConfigured] = useState(false)\n  const [hoverPolygon, setHoverPolygon] = useState<Store | null>(null)\n  const theme = useTheme()\n  const isMobile = useMobile()\n  const globeRef = useRef<GlobeMethods>()\n  const globeOuterRef = useRef<HTMLDivElement>(null)\n\n  const maxVal = useMemo(\n    () => regions && Math.max(...regions.map(casesPercent)),\n    [regions]\n  )\n\n  const colorScale = scaleLinear<string>()\n    .domain([0, maxVal || 0])\n    .range([theme.palette.primary.light, theme.palette.primary.dark])\n\n  const handlePolygonClick = useCallback(\n    (feature: any) => {\n      setChosenRegion(feature as CovidFeature)\n    },\n    [setChosenRegion]\n  )\n\n  useEffect(() => {\n    const lat = chosenRegion?.properties?.countryInfo?.lat\n    const lng = chosenRegion?.properties?.countryInfo?.long\n    if (lat && lng) {\n      // @ts-ignore\n      globeRef.current.controls().autoRotate = false\n      globeRef.current?.pointOfView(\n        {\n          lat,\n          lng,\n        },\n        POV_CHANGE_DUR\n      )\n    }\n  }, [chosenRegion])\n\n  useEffect(() => {\n    if (globeRef.current && !configured) {\n      // @ts-ignore\n      globeRef.current.controls().enableZoom = false\n      // @ts-ignore\n      globeRef.current.controls().autoRotate = true\n      globeRef.current.pointOfView({ lat: 37, lng: 55, altitude: 1.5 })\n\n      setConfigured(true)\n    }\n  }, [globeRef.current, configured])\n\n  return regions ? (\n    <Grid container spacing={DEFAULT_SPACE}>\n      <Grid item xs={12} lg={6} id=\"globe\" ref={globeOuterRef}>\n        <Globe\n          showGlobe={false}\n          // globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n          showAtmosphere={false}\n          width={globeOuterRef.current?.clientWidth}\n          height={isMobile ? window.innerWidth : window.innerHeight - 200}\n          backgroundColor={theme.palette.background.default}\n          onGlobeReady={() => setLoaderState(false)}\n          ref={globeRef}\n          polygonSideColor={() => 'rgba(0, 0, 0, 0)'}\n          polygonCapColor={(f: any) =>\n            (f === hoverPolygon && !isMobile) ? theme.palette.primary.main : colorScale(casesPercent(f))\n          }\n          polygonsData={regions}\n          polygonStrokeColor={() => theme.palette.background.default}\n          polygonLabel={(f: any) =>\n            !isMobile\n              ? `<div id=\"globeTooltip\">\n              ${formatCountry(f.properties.iso_n3)}\n              <div>${formatShortNumber(f.properties.cases)}</div>\n              <div>${casesPercent(f).toFixed(2)}%</div>\n            </div>`\n              : ''\n          }\n          onPolygonClick={handlePolygonClick}\n          onPolygonHover={setHoverPolygon}\n        />\n      </Grid>\n\n      <Grid item xs={12} lg={6}>\n        <LandingGraphs />\n        <Box sx={{ mt: 2 }}/>\n        <LandingCounters />\n      </Grid>\n    </Grid>\n  ) : null\n}\n","export const POV_CHANGE_DUR = 300\n","import { Route, Switch } from 'react-router-dom'\nimport { Landing } from 'pages'\nimport { ROUTES } from './Routing.const'\n\nexport const Routing = () => (\n  <Switch>\n    <Route path={ROUTES.MAIN} exact component={Landing} />\n  </Switch>\n)\n","import AppBar from '@mui/material/AppBar'\n// import IconButton from '@mui/material/IconButton'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\n// import MenuIcon from '@mui/icons-material/Menu'\nimport { DEFAULT_SPACE } from 'shared/const'\nimport { CountrySelector } from '../CountrySelector'\n// import { HeaderProps } from './Header.types'\n\nconst appBarSx = { mb: DEFAULT_SPACE }\n// const iconBarSc = { mr: 2 }\n\nexport const Header = () => (\n  <AppBar position=\"sticky\" color=\"default\" sx={appBarSx}>\n    <Toolbar sx={{ display: 'flex', justifyContent: 'space-between' }}>\n      {/* <IconButton */}\n      {/*  color=\"inherit\" */}\n      {/*  aria-label=\"open drawer\" */}\n      {/*  edge=\"start\" */}\n      {/*  onClick={onDrawerToggle} */}\n      {/*  sx={iconBarSc} */}\n      {/* > */}\n      {/*  <MenuIcon /> */}\n      {/* </IconButton> */}\n      <Typography variant=\"h5\" noWrap component=\"div\">\n        corona.\n        <Typography component=\"span\" variant=\"h5\" color=\"primary\">\n          virus\n        </Typography>\n      </Typography>\n      <CountrySelector />\n    </Toolbar>\n  </AppBar>\n)\n","import { Header } from './components'\n\n// export const Navigation = () => {\n//   const [open, setOpen] = useState(false)\n//\n//   const handleDrawerToggle = useCallback(() => {\n//     setOpen((prev) => !prev)\n//   }, [])\n//\n//   return (\n//     <>\n//       <Header />\n//       <Drawer onDrawerToggle={handleDrawerToggle} open={open} />\n//     </>\n//   )\n// }\n\nexport const Navigation = Header\n","import Box from '@mui/material/Box'\nimport { ReactChildren, ReactNode } from 'react'\nimport { DEFAULT_SPACE } from 'shared/const'\n\nconst boxSx = { px: DEFAULT_SPACE, pb: DEFAULT_SPACE }\n\nexport const Main = ({ children }: { children: ReactChildren | ReactNode }) => (\n  <Box component=\"main\" sx={boxSx}>\n    {children}\n  </Box>\n)\n","import { HashRouter as Router } from 'react-router-dom'\nimport ThemeProvider from '@mui/material/styles/ThemeProvider'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { lightTheme } from 'themes'\nimport { Routing } from 'routing'\nimport { Navigation, Main } from 'core/components'\nimport './App.css'\nimport { CovidContextProvider, LoaderContextProvider } from 'core/context'\n\nexport const App = () => (\n  <ThemeProvider theme={lightTheme}>\n    <CssBaseline />\n\n    <LoaderContextProvider>\n      <CovidContextProvider>\n        <Router>\n          <Navigation />\n          <Main>\n            <Routing />\n          </Main>\n        </Router>\n      </CovidContextProvider>\n    </LoaderContextProvider>\n  </ThemeProvider>\n)\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\ntype Config = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    TOKEN?: string | Resolver<string>;\n    USERNAME?: string | Resolver<string>;\n    PASSWORD?: string | Resolver<string>;\n    HEADERS?: Headers | Resolver<Headers>;\n    ENCODE_PATH?: (path: string) => string;\n}\n\nexport const OpenAPI: Config = {\n    BASE: 'https://disease.sh',\n    VERSION: '3.0.0',\n    WITH_CREDENTIALS: false,\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\n"],"sourceRoot":""}